---
# Default values for aws-quota-checker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/gravitational/aws-quota-checker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

checker:
  enableDebugLogging: false
  aws:
    regions:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
    enabledChecks:
      - all
    # credentialSecretName: ""  # Optional. Contains the name of a secret in the namespace that has standard AWS credential environment vars.
    # profileName: ""
    # quotaLimitCheckIntervalSeconds: 600
    # quotaCurrentValueCheckIntervalSeconds: 300
    # refreshResourcesIntervalSeconds: 300
  prometheus:
    # metricsPrefix: ""
    enableDurationMetrics: true

# Grafana dashboards
dashboards:
  enabled: false
  additionalLabels:
    grafana_dashboard: "1" # Default label for Grafana Helm chart dashboard sidecar

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 10014 # Next available port from https://github.com/prometheus/prometheus/wiki/Default-port-allocations

serviceMonitor:
  enabled: false

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
